<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:slack="http://www.mulesoft.org/schema/mule/slack"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/slack http://www.mulesoft.org/schema/mule/slack/current/mule-slack.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<sub-flow name="client-create-order-shipment-call-ws-create-order-shipment-medistik" doc:id="f6021928-11de-498f-adb9-296361792a0e" >
		<wsc:consume doc:name="Consume" doc:id="c54a893b-3616-455a-9a87-157229694be2" config-ref="tms-unigis-avior-Web_services_consumer_config" operation="CrearOrdenesEntrega"/>
	</sub-flow>	
		<sub-flow name="client-create-order-shipment-call-ws-create-client-order-medistik" doc:id="2fd9be2d-719c-4f3e-b707-47542e0444d0" >
		<wsc:consume doc:name="Consume" doc:id="ffbcc9c2-9ed6-4cc8-9de4-715986c3405e" config-ref="tms-unigis-medistik-Web_Service_Consumer_Config" operation="CrearClientesDadores"/>
	</sub-flow>	
		<sub-flow name="client-create-order-shipment-call-ws-create-transportista-medistik" doc:id="74bff1b4-2b01-4491-a762-a53dba3e3249" >
		<wsc:consume doc:name="Consume" doc:id="46158650-9328-44bb-935c-d0ece468870a" config-ref="tms-unigis-medistik-Web_Service_Consumer_Config" operation="CrearTransportes"/>
	</sub-flow>			
	<sub-flow name="client-create-order-shipment-call-ws-modificar-estado-guia-medistik" doc:id="49084fdf-f62b-41e8-a9af-f5fee13fc199" >
		<wsc:consume doc:name="Consume" doc:id="decb7911-2076-4a2f-b48b-0dc31f321deb" config-ref="tms-unigis-medistik-Web_Service_Consumer_Config" operation="ModificarEstadoGuia"/>
	</sub-flow>
	<sub-flow name="client-create-order-shipment-call-ws-modificar-estado-viaje-medistik" doc:id="ba6d5d4c-06c5-4288-9e40-fcd7c9e54cab" >
		<wsc:consume doc:name="Consume" doc:id="5667af6a-c22d-4b2c-a2b0-df2e9dbf57f3" config-ref="tms-unigis-medistik-Web_Service_Consumer_Config" operation="ModificarEstadoViaje"/>
	</sub-flow>
	<sub-flow name="client-ws-unigis-medistik-send-document-pdf-and-xml" doc:id="dd0b5474-374d-45bc-84d6-642980cd1fcd" >
		<wsc:consume doc:name="Consume" doc:id="14086a68-73ee-4c23-b071-dbc24999e0e1" config-ref="tms-unigis-medistik-Web_Service_Consumer_Config" operation="CrearDocumentos" target="createDocResp"/>
		<logger level="INFO" doc:name="Logger" doc:id="1304998c-d347-4002-9b3d-4e101aa6d178" message="#[vars.createDocResp]"/>
		<choice doc:name="Choice" doc:id="9b73a894-eb0f-43bd-9e0c-9af24a588231" >
			<when expression='#[vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult &lt; "0" or&#10;vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult == "99"]'>
				<!-- [STUDIO:"Set structure error response for slack"]<ee:transform doc:name="Set structure error response for slack" doc:id="62d12f7d-fb62-4440-a367-73c470431ea3">
								<ee:message>
								</ee:message>
								<ee:variables>
									<ee:set-variable variableName="httpStatus"><![CDATA[400&#93;&#93;></ee:set-variable>
									<ee:set-variable variableName="sendToSlack"><![CDATA[%dw 2.0
output application/json
import modules::code_errors_unigis
&#45;&#45;-
write(code_errors_unigis::error(vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult))

//write(if(vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult == "1")
//		{
//			"traxion_response": {
//					"completed_succesfully": "false",
//					"error_code": vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult,
//					"error": "ERROR_OPERACION: Validar el código de Operación enviado en las estructuras. Algun campo está vacío, no se está enviando o su formato es incorrecto."
//				}
//		}
//	else if (vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult == "99")
//		{
//			"traxion_response": {
//					"completed_succesfully": "false",
//					"error_code": vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult,
//					"error": "EXCEPCION_GENERAL: Error no controlado."
//				}
//		}
//	else if (vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult == "-100")
//		{
//			"traxion_response": {
//					"completed_succesfully": "false",
//					"error_code": vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult,
//					"error": "ERROR_API_KEY: ApiKey Incorrecto."
//				}
//		}
//	else if (vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult == "-44")
//		{
//			"traxion_response": {
//					"completed_succesfully": "false",
//					"error_code": vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult,
//					"error": "Hace falta llenar el campo referencia."
//				}
//		}
//	else
//		"")&#93;&#93;></ee:set-variable>
								</ee:variables>
							</ee:transform> [STUDIO] -->
				<!-- [STUDIO:"Send Message"]<slack:create-chatpost-message doc:name="Send Message" doc:id="bf88b9b6-127d-40a2-9f60-6eba9fb76001" config-ref="Slack_Connector_Config">
								<slack:chatpost-message-content><![CDATA[#[%dw 2.0
output application/json
&#45;&#45;-
{
	"channel": Mule::p('slack.connection.channel'),
	"text": "`Attention!` <!channel> There was an error in a mule app-> :warning: "
	++ "\n &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-"
	++ "\n `ERROR DE CREACIÓN DE DOCUMENTO EN SISTEMA UNIGIS`"
	++ "\n &#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;&#45;-"
	++ "\n Fecha y hora ->" ++ now() as String
	++ "\n" ++ (vars.sendToSlack)
}&#93;&#93;&#93;></slack:chatpost-message-content>
							</slack:create-chatpost-message> [STUDIO] -->
				<ee:transform doc:name="Set structure error for payload" doc:id="c3e20178-7d14-4a6a-8e1e-cf7f52d9f4c9">
								<ee:message>
									<ee:set-payload><![CDATA[%dw 2.0
output application/json
import modules::code_errors_unigis
---
code_errors_unigis::error(vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult)

//if(vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult == "1")
//{
//	"traxion_response": {
//		"completed_succesfully": "false",
//		"error_code": vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult,
//		"error": "ERROR_OPERACION: Validar el código de Operación enviado en las estructuras. Algun campo está vacío, no se está enviando o su formato es incorrecto."
//	}
//}
//else if (vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult == "99")
//{
//	"traxion_response": {
//		"completed_succesfully": "false",
//		"error_code": vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult,
//		"error": "EXCEPCION_GENERAL: Error no controlado."
//	}
//}
//else if (vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult == "-100")
//{
//	"traxion_response": {
//		"completed_succesfully": "false",
//		"error_code": vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult,
//		"error": "ERROR_API_KEY: ApiKey Incorrecto."
//	}
//}
//else if (vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult == "-44")
//{
//	"traxion_response": {
//		"completed_succesfully": "false",
//		"error_code": vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult,
//		"error": "Hace falta llenar el campo referencia."
//	}
//}
//else
//""]]></ee:set-payload>
								</ee:message>
								<ee:variables>
								</ee:variables>
							</ee:transform>
				<logger level="WARN" doc:name="Logger" doc:id="aa441145-b129-4cce-9182-653f95f87e47" message="#[payload]" />
				<!-- [STUDIO:"Try"]<try doc:name="Try" doc:id="0dc6ae92-6856-49b0-a0c9-be17fbbae3fc" >
					<raise-error doc:name="Raise error" doc:id="72604df3-5b91-4f5f-b35b-8ac1f27ef832" type="ERROR:UNIGISCREATEDOCUMENT" description="Error al crear el documento" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="1e2f647d-8d69-4f94-806c-e7aa11b6fdc2" type="ERROR:UNIGISCREATEDOCUMENT">
						</on-error-continue>
					</error-handler>
				</try> [STUDIO] -->
			</when>
			<when expression='#[vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult == "1"]'>
				<ee:transform doc:name="Set successful response" doc:id="70e7da74-180c-47a6-92e4-efdaeb46f117">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
import modules::code_successful_response_document_unigis
---
code_successful_response_document_unigis::success(vars.createDocResp.body.CrearDocumentosResponse.CrearDocumentosResult)]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[201]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="b6e1e529-61fe-4175-963f-cd19816fc8c8" message="#[payload]"/>
			</otherwise>
		</choice>
	</sub-flow>		
</mule>
